<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="cn.wfc.shop.mapper.MyUserMapper">
    <resultMap id="UserInfoMap" type="cn.wfc.shop.entity.MyUser">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="phone" property="phone"/>
        <result column="email" property="email"/>
        <result column="created" property="created"/>
        <result column="updated" property="updated"/>
    </resultMap>
    <sql id="BaseCol">
        id,username,password,phone,email,created,updated
    </sql>

    <select id="findUserByEmail" resultMap="UserInfoMap">
        select
        <include refid="BaseCol"/>
        from
        tb_user
        where email = #{email}
    </select>
    <select id="findById" resultMap="UserInfoMap">
        select
        <include refid="BaseCol"/>
        from
        tb_user
        where id = #{id}
    </select>

    <delete id="deleteById" parameterType="string">
        delete from tb_user
        where id=#{id}
    </delete>
    <select id="findByExample" resultMap="UserInfoMap" parameterType="cn.wfc.shop.entity.MyUser">
        select
        <include refid="BaseCol"/>
        from tb_user
        <where>
            <if test="example.username!=null and example.username!=''">
                and username = #{example.username}
            </if>
            <if test="example.phone!=null and example.phone!=''">
                and phone = #{example.phone}
            </if>
            <if test="example.email!=null and example.email!=''">
                and email = #{example.email}
            </if>
        </where>
    </select>
    <select id="findAll" resultMap="UserInfoMap">
        select
          id,
          username,
          password,
          phone,
          email,
          created,
          updated
        from
          tb_user
    </select>
    <select id="findByKey" resultMap="UserInfoMap">
        select
          id,
          username,
          password,
          phone,
          email,
          created,
          updated
        from
          tb_user
          where  username like concat('%',#{key} ,'%')
          or phone like concat('%',#{key},'%')
          or email like concat('%',#{key},'%')
    </select>
    <insert id="insert" parameterType="cn.wfc.shop.entity.MyUser" useGeneratedKeys="true" keyProperty="id">
        insert into tb_user(username,password,phone,email,created ,updated)
        values(#{myUser.username},#{myUser.password},#{myUser.phone},#{myUser.email},#{myUser.created},#{myUser.updated})
    </insert>
    <update id="updateById" parameterType="cn.wfc.shop.entity.MyUser">
        update tb_user set username=#{myUser.username},password=#{myUser.password},
        phone=#{myUser.phone},email=#{myUser.email},updated=#{myUser.updated}
        where id=#{myUser.id}
    </update>
</mapper>